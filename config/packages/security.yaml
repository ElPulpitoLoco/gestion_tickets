security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    
    # chargement des utilisateurs
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
                
    # Config des firewalls           
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider

            # active l'authentification par formulaire
            form_login:
                login_path: login
                check_path: login
                default_target_path: / # redirige après la connexion
                success_handler: App\Security\LoginSuccessHandler

            logout:
                path: logout
                target: homepage # redirige après déco
    
    # def des rôles:
    role_hierarchy:
        ROLE_ADMIN: [ROLE_STAFF]
        ROLE_STAFF: [ROLE_USER]
        
   # Les contrôles d'accès:
    access_control:
        # Accès réservé aux admins pour les URL qui commence par /admin
        - { path: ^/admin, roles: ROLE_ADMIN }

        # Accès réservé aux staff pour les URL qui commence par /staff
        - { path: ^/staff/, roles: ROLE_STAFF }

        # Accès pour les utilisateurs authentifiés à une partie sécurisée
        #- { path: ^/secure, roles: IS_AUTHENTICATED_FULLY }

        # Accès pour tout le monde à la page d'accueil
        #- { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
